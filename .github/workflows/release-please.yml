name: Release
on:
  push:
     branches:
       - main

jobs:
  gh-release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-pr.outputs.release_created }}
      upload_url: ${{ steps.release-pr.outputs.upload_url }}
      tag_name: ${{ steps.release-pr.outputs.tag_name }}
      major: ${{ steps.release-pr.outputs.major }}
      minor: ${{ steps.release-pr.outputs.minor }}
      patch: ${{ steps.release-pr.outputs.patch }}
      sha: ${{ steps.release-pr.outputs.sha }}
      body: ${{ steps.release-pr.outputs.body }}
    steps:
      - name: release-pr
        id: release-pr
        uses: GoogleCloudPlatform/release-please-action@v2
        with:
          release-type: simple
          package-name: release-toolbox
          pull-request-title-pattern: 'chore: release${component} ${version}'
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'


  docker-release:
    needs: [gh-release]
    if: ${{ needs.gh-release.outputs.release_created }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}
      - name: Cache .m2 registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Release
        run: |
          REL_VERSION="$(cat version.txt)"
          echo "Making deployment for version: $REL_VERSION"
          echo "Github release version: ${{ needs.gh-release.outputs.major }}.${{ needs.gh-release.outputs.minor }}.${{ needs.gh-release.outputs.patch }}"
          mvn deploy --file pom.xml -s $GITHUB_WORKSPACE/settings.xml -Drevision=${REL_VERSION} \
            -Djkube.docker.username=${{ secrets.DOCKER_HUB_USERNAME }} \
            -Djkube.docker.password=${{ secrets.DOCKER_HUB_PASSWORD }} \
            -Djkube.docker.verbose=true \
            -Djkube.docker.registry=docker.io
        env:
          GITHUB_TOKEN: ${{ github.token }}
